<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
	   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
	   http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd 
	   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd  
	   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<bean id="dataSource" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}">
		</property>
		<property name="url" value="${jdbc.url}">
		</property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<!-- 连接池启动时的初始值 -->
		<property name="initialSize" value="10" />
		<!-- 连接池的最大值 -->
		<property name="maxActive" value="2000" />
		<!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
		<property name="maxIdle" value="50" />
		<!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
		<property name="minIdle" value="10" />
		<!-- 是否要进行检测 -->
		<property name="testWhileIdle" value="true" />
		<!-- 进行检测一个连接是有效的SQL语句 -->
		<property name="validationQuery" value="SELECT 1" />
		<property name="defaultAutoCommit" value="true" />
		<!-- 是否在数据库连接请求量大的时候，如总数50，当前已请求了49个，所剩不多了，检测那些执行时间久的连接，将其从池中移除掉(移除之后怎么作，由实现决定，如直接断开，或者任其继续执行等) -->
		<property name="removeAbandoned" value="true" />
		<!-- 一次数据库操作执行时间超过多少秒的连接被认为是需要移除的 -->
		<property name="removeAbandonedTimeout" value="3600" />
		<!-- 每次检测时，需要检测多少个数据连接，一般设置为与最大连接数一样，这样就可以检测完所有的连接 -->
		<property name="numTestsPerEvictionRun" value="3" />
		<!-- 一个数据库连接连接多少时间之外，我们认为其应该不再适用了(可能下一次就会失效了)，应该移除并重新建立连接了 -->
		<property name="minEvictableIdleTimeMillis" value="1800000" />
		<property name="timeBetweenEvictionRunsMillis" value="1800000" />
	</bean>

	<!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage" value="com.jiayaming.dubbo.customer" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath*:mappers/*.xml" />
	</bean>
	<!-- 扫描basePackage下所有Mapper接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!-- 这里需要更改dao的路径 -->
		<property name="basePackage" value="com.jiayaming.dubbo.customer.dao" />
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx --> 
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
     
    <!-- 声明式事务管理 -->
    <aop:config>  
        <aop:advisor pointcut="execution(* com.jiayaming.dubbo.*.service.*.*(..))" 
            advice-ref="myAdvice" />  
    </aop:config>  
    <tx:advice id="myAdvice" transaction-manager="txManager">  
        <tx:attributes>  
            <tx:method name="find*" propagation="SUPPORTS" read-only="true" />  
            <tx:method name="query*" propagation="SUPPORTS" read-only="true" />  
            <tx:method name="list*" propagation="SUPPORTS" read-only="true" />  
            <tx:method name="get*" propagation="SUPPORTS" read-only="true" /> 
   
            <tx:method name="create*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="insert*" propagation="REQUIRED" />  
            <tx:method name="save*" propagation="REQUIRED" />  
            <tx:method name="modify*" propagation="REQUIRED" />  
            <tx:method name="update*" propagation="REQUIRED" />  
            <tx:method name="delete*" propagation="REQUIRED" /> 
            <tx:method name="alter*" propagation="REQUIRED" /> 
            
            <tx:method name="*" propagation="SUPPORTS" read-only="true" />  
        </tx:attributes>  
    </tx:advice>  

	<!-- 可通过注解控制事务 -->
<!-- 	<tx:annotation-driven transaction-manager="txManager" -->
<!-- 		proxy-target-class="true" /> -->

</beans>
